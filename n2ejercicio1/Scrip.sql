-- MySQL Script generated by MySQL Workbench
-- Tue Jun 13 09:29:57 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtubedb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `youtubedb` ;

-- -----------------------------------------------------
-- Schema youtubedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtubedb` DEFAULT CHARACTER SET utf8 ;
USE `youtubedb` ;

-- -----------------------------------------------------
-- Table `youtubedb`.`comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`comentarios` (
  `idcomentarios` INT NOT NULL,
  `textoComentario` LONGTEXT NOT NULL,
  `fechaHora` DATETIME NOT NULL,
  PRIMARY KEY (`idcomentarios`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idcomentarios_UNIQUE` ON `youtubedb`.`comentarios` (`idcomentarios` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(25) NOT NULL,
  `nombreDeUsuario` VARCHAR(25) NOT NULL,
  `fechaDeNacimiento` DATE NOT NULL,
  `sexo` CHAR NOT NULL,
  `pais` VARCHAR(25) NOT NULL,
  `codigoPostal` INT(5) NULL,
  `comentarios_idcomentarios` INT NOT NULL,
  PRIMARY KEY (`idUsuario`),
  CONSTRAINT `fk_Usuario_comentarios1`
    FOREIGN KEY (`comentarios_idcomentarios`)
    REFERENCES `youtubedb`.`comentarios` (`idcomentarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idUsuario_UNIQUE` ON `youtubedb`.`Usuario` (`idUsuario` ASC) VISIBLE;

CREATE INDEX `fk_Usuario_comentarios1_idx` ON `youtubedb`.`Usuario` (`comentarios_idcomentarios` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`estadosVideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`estadosVideo` (
  `idestadosVideo` INT NOT NULL AUTO_INCREMENT,
  `nombreDelEstado` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idestadosVideo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtubedb`.`etiquetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`etiquetas` (
  `idetiquetas` INT NOT NULL AUTO_INCREMENT,
  `Usuario_idUsuario` INT NOT NULL,
  `nombreDeEtiqueta` LONGTEXT NOT NULL,
  PRIMARY KEY (`idetiquetas`),
  CONSTRAINT `fk_etiquetas_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `youtubedb`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_etiquetas_Usuario1_idx` ON `youtubedb`.`etiquetas` (`Usuario_idUsuario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`registroLikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`registroLikes` (
  `idregistroLikes` INT NOT NULL,
  `numeroLikes` INT NOT NULL,
  `numeroDislikes` INT NOT NULL,
  `fecha/hora` DATETIME NOT NULL,
  PRIMARY KEY (`idregistroLikes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtubedb`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`video` (
  `idvideos` INT NOT NULL AUTO_INCREMENT,
  `Usuario_idUsuario` INT NOT NULL,
  `estadosVideo_idestadosVideo` INT NOT NULL,
  `etiquetas_idetiquetas` INT NOT NULL,
  `registroLikes_idregistroLikes` INT NOT NULL,
  `titulo` VARCHAR(25) NOT NULL,
  `grandaria` VARCHAR(45) NOT NULL,
  `nombreDeArchivo` VARCHAR(20) NOT NULL,
  `duracion` FLOAT NOT NULL,
  `thumbnail` BLOB NOT NULL,
  `numeroReproducciones` INT NOT NULL,
  `numeroLikes` INT NOT NULL,
  `numeroDislikes` INT NOT NULL,
  PRIMARY KEY (`idvideos`),
  CONSTRAINT `fk_videos_Usuario`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `youtubedb`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_estadosVideo1`
    FOREIGN KEY (`estadosVideo_idestadosVideo`)
    REFERENCES `youtubedb`.`estadosVideo` (`idestadosVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_etiquetas1`
    FOREIGN KEY (`etiquetas_idetiquetas`)
    REFERENCES `youtubedb`.`etiquetas` (`idetiquetas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_registroLikes1`
    FOREIGN KEY (`registroLikes_idregistroLikes`)
    REFERENCES `youtubedb`.`registroLikes` (`idregistroLikes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idvideos_UNIQUE` ON `youtubedb`.`video` (`idvideos` ASC) VISIBLE;

CREATE INDEX `fk_videos_Usuario_idx` ON `youtubedb`.`video` (`Usuario_idUsuario` ASC) VISIBLE;

CREATE INDEX `fk_video_estadosVideo1_idx` ON `youtubedb`.`video` (`estadosVideo_idestadosVideo` ASC) VISIBLE;

CREATE INDEX `fk_video_etiquetas1_idx` ON `youtubedb`.`video` (`etiquetas_idetiquetas` ASC) VISIBLE;

CREATE INDEX `fk_video_registroLikes1_idx` ON `youtubedb`.`video` (`registroLikes_idregistroLikes` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`canal` (
  `idcanal` INT NOT NULL AUTO_INCREMENT,
  `Usuario_idUsuario` INT NOT NULL,
  `nombreCanal` VARCHAR(30) NOT NULL,
  `descripcion` LONGTEXT NOT NULL,
  `fechaDeCreacion` DATE NOT NULL,
  PRIMARY KEY (`idcanal`),
  CONSTRAINT `fk_canal_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `youtubedb`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idcanal_UNIQUE` ON `youtubedb`.`canal` (`idcanal` ASC) VISIBLE;

CREATE INDEX `fk_canal_Usuario1_idx` ON `youtubedb`.`canal` (`Usuario_idUsuario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`myPlayList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`myPlayList` (
  `idmyPlayList` INT NOT NULL,
  `Usuario_idUsuario` INT NOT NULL,
  `nombre` VARCHAR(25) NOT NULL,
  `fechaCreacion` DATE NOT NULL,
  `estado` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idmyPlayList`),
  CONSTRAINT `fk_myPlayList_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `youtubedb`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_myPlayList_Usuario1_idx` ON `youtubedb`.`myPlayList` (`Usuario_idUsuario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`myPlayList_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`myPlayList_has_video` (
  `myPlayList_idmyPlayList` INT NOT NULL,
  `video_idvideos` INT NOT NULL,
  PRIMARY KEY (`myPlayList_idmyPlayList`, `video_idvideos`),
  CONSTRAINT `fk_myPlayList_has_video_myPlayList1`
    FOREIGN KEY (`myPlayList_idmyPlayList`)
    REFERENCES `youtubedb`.`myPlayList` (`idmyPlayList`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_myPlayList_has_video_video1`
    FOREIGN KEY (`video_idvideos`)
    REFERENCES `youtubedb`.`video` (`idvideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_myPlayList_has_video_video1_idx` ON `youtubedb`.`myPlayList_has_video` (`video_idvideos` ASC) VISIBLE;

CREATE INDEX `fk_myPlayList_has_video_myPlayList1_idx` ON `youtubedb`.`myPlayList_has_video` (`myPlayList_idmyPlayList` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtubedb`.`comentarios_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtubedb`.`comentarios_has_video` (
  `comentarios_idcomentarios` INT NOT NULL,
  `video_idvideos` INT NOT NULL,
  `registroLikes_idregistroLikes` INT NOT NULL,
  PRIMARY KEY (`comentarios_idcomentarios`, `video_idvideos`),
  CONSTRAINT `fk_comentarios_has_video_comentarios1`
    FOREIGN KEY (`comentarios_idcomentarios`)
    REFERENCES `youtubedb`.`comentarios` (`idcomentarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentarios_has_video_video1`
    FOREIGN KEY (`video_idvideos`)
    REFERENCES `youtubedb`.`video` (`idvideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentarios_has_video_registroLikes1`
    FOREIGN KEY (`registroLikes_idregistroLikes`)
    REFERENCES `youtubedb`.`registroLikes` (`idregistroLikes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_comentarios_has_video_video1_idx` ON `youtubedb`.`comentarios_has_video` (`video_idvideos` ASC) VISIBLE;

CREATE INDEX `fk_comentarios_has_video_comentarios1_idx` ON `youtubedb`.`comentarios_has_video` (`comentarios_idcomentarios` ASC) VISIBLE;

CREATE INDEX `fk_comentarios_has_video_registroLikes1_idx` ON `youtubedb`.`comentarios_has_video` (`registroLikes_idregistroLikes` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
